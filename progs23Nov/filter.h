#ifndef __FILTER_H
#define __FILTER_H
//////////////////////////////////////////////////////////////////////////////////////////////
#include <string>
#include <functional>
//////////////////////////////////////////////////////////////////////////////////////////////
class SetDustLevel:public std::unary_function<int,bool> {
	public:
		bool operator()(int value) const;
};
//////////////////////////////////////////////////////////////////////////////////////////////
class SetDustWord:public std::unary_function<int,bool> {
	public:
		bool operator()(int value) const;
};
//////////////////////////////////////////////////////////////////////////////////////////////
class SetDustWindow:public std::unary_function<int,bool> {
	public:
		bool operator()(int value) const;
};
//////////////////////////////////////////////////////////////////////////////////////////////
class SetDustMask:public std::unary_function<char,bool> {
	public:
		bool operator()(char m) const;
};
//////////////////////////////////////////////////////////////////////////////////////////////
class Dust:public std::unary_function<std::string,std::string> {
	public:
		std::string operator()(const std::string& s) const;
};
#endif
//////////////////////////////////////////////////////////////////////////////////////////////
class SetDPWindow:public std::unary_function<int,bool> {
	public:
		bool operator()(int value) const;
};
//////////////////////////////////////////////////////////////////////////////////////////////
class SetDPWord:public std::unary_function<int,bool> {
	public:
		bool operator()(int value) const;
};
//////////////////////////////////////////////////////////////////////////////////////////////
class SetDPThreshold:public std::unary_function<int,bool> {
	public:
		bool operator()(int value) const;
};
//////////////////////////////////////////////////////////////////////////////////////////////
class SetDPCutoff:public std::unary_function<int,bool> {
	public:
		bool operator()(int value) const;
};
//////////////////////////////////////////////////////////////////////////////////////////////
enum dpFilterType { sum, count };
class SetDPType:public std::unary_function<dpFilterType,bool> {
	public:
		bool operator()(dpFilterType value) const;
};
//////////////////////////////////////////////////////////////////////////////////////////////
class DPFilter:public std::unary_function<std::string,std::string> {
	public:
		std::string operator()(const std::string& s) const;
};
//////////////////////////////////////////////////////////////////////////////////////////////
